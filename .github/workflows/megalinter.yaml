---
# MegaLinter GitHub Action configuration file
# More info at https://megalinter.io
# All variables described in https://megalinter.io/latest/configuration/

name: MegaLinter
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]

# Run Linters in parallel
# Cancel running job if new job is triggered
concurrency:
  group: "${{ github.ref }}-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    steps:
      - run: echo "🚀 Job automatically triggered by ${{ github.event_name }}"
      - run: echo "🐧 Job running on ${{ runner.os }} server"
      - run: echo "🐙 Using ${{ github.ref }} branch from ${{ github.repository }} repository"

      # Git Checkout
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          sparse-checkout: |
            docs
            overrides
            .github
      - run: echo "🐙 Sparse Checkout of ${{ github.repository }} repository to the CI runner."

      # MegaLinter Configuration
      - name: MegaLinter Run
        id: ml
        ## latest release of major version
        uses: oxsecurity/megalinter/flavors/documentation@v8
        env:
          # ADD CUSTOM ENV VARIABLES OR DEFINE IN MEGALINTER_CONFIG file
          MEGALINTER_CONFIG: .github/config/megalinter.yaml

          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" # report individual linter status
          # Validate all source when push on main, else just the git diff with live.
          VALIDATE_ALL_CODEBASE: >-
            ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}

      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      # Summary and status
      - run: echo "🎨 MegaLinter quality checks completed"
      - run: echo "🍏 Job status is ${{ job.status }}."
